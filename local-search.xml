<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>小区</title>
    <link href="/2021/01/26/20210126dinghaixiaoqu/"/>
    <url>/2021/01/26/20210126dinghaixiaoqu/</url>
    
    <content type="html"><![CDATA[<h3 id="时间"><a class="markdownIt-Anchor" href="#时间"></a> 时间</h3><p><strong>2021.01.26</strong></p><h3 id="地点"><a class="markdownIt-Anchor" href="#地点"></a> 地点</h3><p><strong>小区</strong></p><a id="more"></a><p>归家之心突然尤为急切。</p><p>1月23日考完离散数学，提前了半个多小时交卷，掰了掰时间，好像来不及回家了。</p><p>于是订了24很早的票，趁太阳还趴在地平线下，拎起行李箱就离开了寝室楼。</p><p>在一楼登记离校的时候，意外地在表格上看到之前的同学的离校日期清一色的12.24，于是一边向宿管阿姨确认时间，一边又感慨——平安夜真好。</p><p>是五个小时的颠簸。</p><p>当在车上听到熟悉的舟山话，在窗外闻到熟悉的只属于家乡的鱼腥味，不经意地瞟向窗外，是一帧帧流动的风景，是一座又一座数得上名字的大桥，脑海中清晰而又明澈的记忆仿佛逐渐被唤醒。</p><p>我终于回到舟山了，从疫情返校到暑期留校集训再到今天，也算整整两个学期了。</p><p>杭州虽好，可不接地气，我走到过学校每一个餐厅的每一个窗口，点过学校边的每一个外卖，越是如此，越是厌倦了想要迎合五湖四海口味的伙食。</p><p>可惜，当我终于拥有了一次充足的睡眠，睁眼却发现下起了淅淅沥沥的小雨，</p><p>我想起初中时喜欢不穿着雨衣骑着自行车狂奔，然后溅的背后一身泥水，</p><p>想起高中时不喜欢打伞，却天天盯着天气预报，只为了盼着能在雨天把伞递给喜欢的女孩子，</p><p>过了这些年纪，开始觉得雨天不好了，</p><p>讨厌下雨天的篮球课变成室外体能课，30个俯卧撑和深蹲轮流做好几组</p><p>讨厌下雨天的早八，浑浑噩噩走出寝室发现自己没有带伞</p><p>讨厌下雨天走进图书馆，出来时却发现伞不见了踪影</p><p>当我终于拿起相机走到户外，突如其来的雨又打破了我的节奏，</p><p>于是我将相机藏在怀里，走在屋檐下，在楼下逛了二十分钟，一边擦着满脸的雨水，一边拍摄下这些照片。</p><center><img src="/img/20210126/2.jpg" width="50%" height="50%" /></center><center>外婆家的旧小区改造</center>&nbsp<center><img src="/img/20210126/3.jpg" width="50%" height="50%" /></center>&nbsp<center><img src="/img/20210126/1.jpg" width="50%" height="50%" /></center>&nbsp<center><img src="/img/20210126/4.jpg" width="50%" height="50%" /></center><center>饿了么骑手</center>&nbsp<center><img src="/img/20210126/6.jpg" width="50%" height="50%" /></center>&nbsp<center><img src="/img/20210126/7.jpg" width="50%" height="50%" /></center><center>当我躲在屋檐下时陪我的扫帚</center>&nbsp<center><img src="/img/20210126/8.jpg" width="50%" height="50%" /></center>&nbsp<center><img src="/img/20210126/9.jpg" width="50%" height="50%" /></center>&nbsp<center><img src="/img/20210126/10.jpg" width="50%" height="50%" /></center>&nbsp<center><img src="/img/20210126/11.jpg" width="50%" height="50%" /></center><center>百废待兴</center>&nbsp<center><img src="/img/20210126/13.jpg" width="50%" height="50%" /></center>&nbsp<center><img src="/img/20210126/14.jpg" width="50%" height="50%" /></center>&nbsp<center><img src="/img/20210126/16.jpg" width="50%" height="50%" /></center>&nbsp<center><img src="/img/20210126/17.jpg" width="50%" height="50%" /></center>&nbsp<center><img src="/img/20210126/18.jpg" width="50%" height="50%" /></center><center>躲在屋檐下发现的不同的视角</center>&nbsp<center><img src="/img/20210126/15.jpg" width="50%" height="50%" /></center><center>享受生活</center>]]></content>
    
    
    
    <tags>
      
      <tag>photo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>九溪烟树游记</title>
    <link href="/2021/01/23/20201107jiuxiyanshu/"/>
    <url>/2021/01/23/20201107jiuxiyanshu/</url>
    
    <content type="html"><![CDATA[<h3 id="时间"><a class="markdownIt-Anchor" href="#时间"></a> 时间</h3><p><strong>2020.11.07</strong></p><h3 id="地点"><a class="markdownIt-Anchor" href="#地点"></a> 地点</h3><p><strong>杭州九溪烟树</strong></p><a id="more"></a><p>11月了杭州已经入秋，一直觉得去过九溪才算是真正逛完了西湖，可惜不太凑巧，枫叶还没有完全变黄</p><p>一路骑自行车上了半山腰，然后不知不觉才发现骑出了服务区，幸好下山的时候碰到了其他停在服务区外的共享单车</p><center><img src="/img/20201107/1.jpg" width="50%" height="50%" /></center><center>山腰湖水的倒影</center><center><img src="/img/20201107/8.jpg" width="50%" height="50%" /></center>&nbsp<center><img src="/img/20201107/2.jpg" width="50%" height="50%" /></center>&nbsp<center><img src="/img/20201107/3.jpg" width="50%" height="50%" /></center><center>这个点有很多家长带孩子出来玩</center><center><img src="/img/20201107/5.jpg" width="50%" height="50%" /></center>&nbsp<center><img src="/img/20201107/6.jpg" width="50%" height="50%" /></center>&nbsp<center><img src="/img/20201107/7.jpg" width="50%" height="50%" /></center>&nbsp<center><img src="/img/20201107/9.jpg" width="50%" height="50%" /></center>]]></content>
    
    
    
    <tags>
      
      <tag>photo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Educational Codeforces Round 102 (Rated for Div. 2)ABCD</title>
    <link href="/2021/01/15/cf-edu102/"/>
    <url>/2021/01/15/cf-edu102/</url>
    
    <content type="html"><![CDATA[<h2 id="a-replacing-elements"><a class="markdownIt-Anchor" href="#a-replacing-elements"></a> A. Replacing Elements</h2><p>题意：可以使用任意次操作，使数组的其中两个元素的和代替另一个元素，问能否使所有元素都小于等于d</p><p>思路：<br />1.如果所有元素都小于等于d，无需操作即符合题意。<br />2.如果存在元素大于d，都可以用最小的两个元素的和去代替，只要最小两个元素的和小于等于d即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-keyword">int</span> a[<span class="hljs-number">105</span>];<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">int</span> t;<span class="hljs-built_in">cin</span>&gt;&gt;t;<br>    <span class="hljs-keyword">while</span>(t--)&#123;<br>        <span class="hljs-keyword">int</span> n,d;<span class="hljs-built_in">cin</span>&gt;&gt;n&gt;&gt;d;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<span class="hljs-built_in">cin</span>&gt;&gt;a[i];<br>        sort(a+<span class="hljs-number">1</span>,a+n+<span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">if</span>(a[n]&lt;=d)&#123;<br>            <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">&quot;YES&quot;</span>&lt;&lt;<span class="hljs-built_in">endl</span>;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(a[<span class="hljs-number">1</span>]+a[<span class="hljs-number">2</span>]&lt;=d)<span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">&quot;YES&quot;</span>&lt;&lt;<span class="hljs-built_in">endl</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">&quot;NO&quot;</span>&lt;&lt;<span class="hljs-built_in">endl</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="b-string-lcm"><a class="markdownIt-Anchor" href="#b-string-lcm"></a> B. String LCM</h2><p>题意：定义字符串的因子，如baba的因子为ba和baba。<br />给你两个字符串，求lcm</p><p>思路：求出两个字符串长度的lcm，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>e</mi><mi>n</mi><mo>=</mo><mi>l</mi><mi>c</mi><mi>m</mi><mo stretchy="false">(</mo><mi>l</mi><mi>e</mi><mi>n</mi><mn>1</mn><mo separator="true">,</mo><mi>l</mi><mi>e</mi><mi>n</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">len=lcm(len1,len2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">c</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord">2</span><span class="mclose">)</span></span></span></span>用其中一个字符串填满新的字符串，再检查另一个字符串是否为新字符串的因子。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">gcd</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y)</span></span>&#123;<br><span class="hljs-keyword">if</span>(x%y==<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> y;<br><span class="hljs-keyword">return</span> gcd(y,x%y);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">int</span> t;<span class="hljs-built_in">cin</span>&gt;&gt;t;<br>    <span class="hljs-keyword">while</span>(t--)&#123;<br>        <span class="hljs-built_in">string</span> a,b,c;<span class="hljs-built_in">cin</span>&gt;&gt;a&gt;&gt;b;<br>        <span class="hljs-keyword">int</span> len1=a.length(),len2=b.length();<br>        <span class="hljs-keyword">int</span> len=(len1*len2)/gcd(len1,len2);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=len/len1;i++)c+=a;<br>        <span class="hljs-keyword">int</span> flag=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;len;i+=len2)&#123;<br>            <span class="hljs-built_in">string</span> d=c.substr(i,len2);<br>            <span class="hljs-keyword">if</span>(b!=d)&#123;<br>                flag=<span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(flag)<span class="hljs-built_in">cout</span>&lt;&lt;c&lt;&lt;<span class="hljs-built_in">endl</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-number">-1</span>&lt;&lt;<span class="hljs-built_in">endl</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="c-no-more-inversions"><a class="markdownIt-Anchor" href="#c-no-more-inversions"></a> C. No More Inversions</h2><p>题意：数组a为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>k</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo separator="true">,</mo><mi>k</mi><mo separator="true">,</mo><mi>k</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo separator="true">,</mo><mi>k</mi><mi mathvariant="normal">−</mi><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>k</mi><mi mathvariant="normal">−</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">−</mi><mi>k</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>k</mi><mo>≤</mo><mi>n</mi><mo>&lt;</mo><mn>2</mn><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1,2,3,…,k−1,k,k−1,k−2,…,k−(n−k) (k≤n&lt;2k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">−</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">−</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>.</p><p>求一个p排列，根据a数组和p数组，根据 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>i</mi></msub><mo>=</mo><mi>p</mi><mo stretchy="false">[</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">b_i=p[a_i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span> 求出b数组，要求b数组的逆序对数量小于等于a数组的逆序对数量，且字典序最大。</p><p>思路：拿到这道题，先算了一下a数组的逆序对数量，可以发现a数组的逆序对主要来自于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo separator="true">,</mo><mi>k</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo separator="true">,</mo><mi>k</mi><mi mathvariant="normal">−</mi><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>k</mi><mi mathvariant="normal">−</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">−</mi><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k,k−1,k−2,…,k−(n−k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">−</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">−</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>，例如（12345432）的逆序对来源于（1234<span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder accentunder="true"><mn>5432</mn><mo stretchy="true">‾</mo></munder></mrow><annotation encoding="application/x-tex">\underline{5432}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.20000000000000007em;"></span><span class="mord underline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6444399999999999em;"><span style="top:-2.84em;"><span class="pstrut" style="height:3em;"></span><span class="underline-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span><span class="mord">4</span><span class="mord">3</span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.20000000000000007em;"><span></span></span></span></span></span></span></span></span>）</p><p>然后考虑一下p数组对生成的b数组的影响，比如如果生成2345432的逆序对和生成5432345是一样的，但是字典序会最大，所以把这部分p数组逆序即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">int</span> t;<span class="hljs-built_in">cin</span>&gt;&gt;t;<br>    <span class="hljs-keyword">while</span>(t--)&#123;<br>        <span class="hljs-keyword">int</span> n,k;<span class="hljs-built_in">cin</span>&gt;&gt;n&gt;&gt;k;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">2</span>*k-n;i++)&#123;<br>            <span class="hljs-built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=k;i&gt;=<span class="hljs-number">2</span>*k-n;i--)&#123;<br>            <span class="hljs-built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>        &#125;<br>        <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-built_in">endl</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="d-program"><a class="markdownIt-Anchor" href="#d-program"></a> D. Program</h2><p>题意：给你一个初始为0的x，给你一系列操作，’+‘表示x+=1，’-'表示x-=1，然后给q次查询l和r，表示删除区间【l，r】内的所有操作，通过剩下的操作可以使x变成多少个不同的值。</p><p>思路：删除中间一部分区间，那么我们剩下了【1，l-1】和【r+1，n】的两端区间，先考虑能够使x变成多少个不同的正数，可以转化为x最大能变成多少，比如x最大如果能变成5，那么必然能变成1、2、3、4。</p><p>最大能变成的数=max（第一段最大能贡献的正数，第一段操作结束后x的值+第二段最大能贡献正数）</p><p>第一段最大能贡献的正数，我们使用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mi>q</mi><mi>i</mi><mi>a</mi><msub><mi>n</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">maxqian_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示，表示1-i的过程中最大能到几，O(n)处理</p><p>第一段操作结束后x的值用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mi>i</mi><mi>a</mi><msub><mi>n</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">qian_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示，前缀和O(n)处理</p><p>第二段最大能贡献正数，我们使用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mi>o</mi><msub><mi>u</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">hou_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示，从后往前处理，比如+±–，那么最大能贡献是2，最后的三个负号没用作用，因此<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mi>o</mi><msub><mi>u</mi><mi>i</mi></msub><mo>&gt;</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">hou_i&gt;=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p><p>然后把if语句中的±号换一下，就可以计算最小能变成的负数</p><p>正负相加再加0就是答案</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> INF 0x3f3f3f3f</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> m(a) memset(a,0,sizeof(a))</span><br><span class="hljs-keyword">int</span> qian[<span class="hljs-number">200005</span>];<br><span class="hljs-keyword">int</span> qian1[<span class="hljs-number">200005</span>];<br><span class="hljs-keyword">int</span> maxqian[<span class="hljs-number">200005</span>];<br><span class="hljs-keyword">int</span> minqian[<span class="hljs-number">200005</span>];<br><span class="hljs-keyword">int</span> hou[<span class="hljs-number">200005</span>];<br><span class="hljs-keyword">int</span> hou1[<span class="hljs-number">200005</span>];<br><span class="hljs-keyword">char</span> s[<span class="hljs-number">200005</span>];<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">int</span> t;<span class="hljs-built_in">cin</span>&gt;&gt;t;<br>    <span class="hljs-keyword">while</span>(t--)&#123;<br>        <span class="hljs-keyword">int</span> n,m;<span class="hljs-built_in">cin</span>&gt;&gt;n&gt;&gt;m;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,s+<span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">int</span> len=<span class="hljs-built_in">strlen</span>(s+<span class="hljs-number">1</span>);<br>        <span class="hljs-comment">//正数部分</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=len;i++)&#123;<br>            <span class="hljs-keyword">if</span>(s[i]==<span class="hljs-string">&#x27;-&#x27;</span>)qian[i]=qian[i<span class="hljs-number">-1</span>]<span class="hljs-number">-1</span>;<br>            <span class="hljs-keyword">else</span> qian[i]=qian[i<span class="hljs-number">-1</span>]+<span class="hljs-number">1</span>;<br>            maxqian[i]=max(maxqian[i<span class="hljs-number">-1</span>],qian[i]);<br>        &#125;<br>        hou[len+<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=len;i&gt;=<span class="hljs-number">1</span>;i--)&#123;<br>            <span class="hljs-keyword">if</span>(s[i]==<span class="hljs-string">&#x27;-&#x27;</span>)&#123;<br>                hou[i]=hou[i+<span class="hljs-number">1</span>]<span class="hljs-number">-1</span>;<br>                <span class="hljs-keyword">if</span>(hou[i]&lt;<span class="hljs-number">0</span>)hou[i]=<span class="hljs-number">0</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                hou[i]=hou[i+<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//负数部分</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=len;i++)&#123;<br>            <span class="hljs-keyword">if</span>(s[i]==<span class="hljs-string">&#x27;+&#x27;</span>)qian1[i]=qian1[i<span class="hljs-number">-1</span>]<span class="hljs-number">-1</span>;<br>            <span class="hljs-keyword">else</span> qian1[i]=qian1[i<span class="hljs-number">-1</span>]+<span class="hljs-number">1</span>;<br>            minqian[i]=max(minqian[i<span class="hljs-number">-1</span>],qian1[i]);<br>        &#125;<br>        hou1[len+<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=len;i&gt;=<span class="hljs-number">1</span>;i--)&#123;<br>            <span class="hljs-keyword">if</span>(s[i]==<span class="hljs-string">&#x27;+&#x27;</span>)&#123;<br>                hou1[i]=hou1[i+<span class="hljs-number">1</span>]<span class="hljs-number">-1</span>;<br>                <span class="hljs-keyword">if</span>(hou1[i]&lt;<span class="hljs-number">0</span>)hou1[i]=<span class="hljs-number">0</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                hou1[i]=hou1[i+<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">while</span>(m--)&#123;<br>            <span class="hljs-keyword">int</span> l,r;<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;l,&amp;r);<br>            <span class="hljs-keyword">int</span> sum1=maxqian[l<span class="hljs-number">-1</span>];<br>            <span class="hljs-keyword">int</span> sum2=qian[l<span class="hljs-number">-1</span>]+hou[r+<span class="hljs-number">1</span>];<br>            <span class="hljs-keyword">int</span> sum3=minqian[l<span class="hljs-number">-1</span>];<br>            <span class="hljs-keyword">int</span> sum4=qian1[l<span class="hljs-number">-1</span>]+hou1[r+<span class="hljs-number">1</span>];<br>            <span class="hljs-built_in">cout</span>&lt;&lt;max(sum1,sum2)+max(sum3,sum4)+<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>codeforces</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ACM寒假训练</title>
    <link href="/2021/01/14/%E5%AF%92%E5%81%87%E8%AE%AD%E7%BB%83/"/>
    <url>/2021/01/14/%E5%AF%92%E5%81%87%E8%AE%AD%E7%BB%83/</url>
    
    <content type="html"><![CDATA[<p>寒假训练日记</p><a id="more"></a><p>今天是1月14日，很多同学都已经放学回家了，可惜我最晚得23号才能考完，于是在这个按道理应该老老实实复习的复习周重新拾起github和博客，用以打发百无聊赖的时间。</p><div class="note note-light">            <p>注：杭电的寒假放假时间为1月27日</p>          </div><h3 id="1月31日"><a class="markdownIt-Anchor" href="#1月31日"></a> 1月31日</h3><p>吃饭休息一天</p><h3 id="1月30日"><a class="markdownIt-Anchor" href="#1月30日"></a> 1月30日</h3><p>dp专题</p><h3 id="1月29日"><a class="markdownIt-Anchor" href="#1月29日"></a> 1月29日</h3><p>Codeforces Round #698 (Div. 2)补题</p><h3 id="1月28日"><a class="markdownIt-Anchor" href="#1月28日"></a> 1月28日</h3><p>摄影+Codeforces Round #698 (Div. 2)</p><h3 id="1月27日"><a class="markdownIt-Anchor" href="#1月27日"></a> 1月27日</h3><p>2-sat专题</p><h3 id="1月25-26"><a class="markdownIt-Anchor" href="#1月25-26"></a> 1月25-26</h3><p>摄影</p><h3 id="1月24日"><a class="markdownIt-Anchor" href="#1月24日"></a> 1月24日</h3><p>Codeforces Round #696 (Div. 2)ABC<br />刚回到家，稍微热身一下</p><h3 id="1月17日-1月23日"><a class="markdownIt-Anchor" href="#1月17日-1月23日"></a> 1月17日-1月23日</h3><div>            <input type="checkbox" disabled checked="checked">考试周          </div><h3 id="1月16日"><a class="markdownIt-Anchor" href="#1月16日"></a> 1月16日</h3><div>            <input type="checkbox" disabled checked="checked">复习大物          </div><div>            <input type="checkbox" disabled checked="checked">复习概率论          </div><h3 id="1月15日"><a class="markdownIt-Anchor" href="#1月15日"></a> 1月15日</h3><div>            <input type="checkbox" disabled checked="checked">写cf题解          </div><div>            <input type="checkbox" disabled checked="checked">继续部署博客          </div><div>            <input type="checkbox" disabled checked="checked">复习大学物理和概率论          </div><h3 id="1月14日"><a class="markdownIt-Anchor" href="#1月14日"></a> 1月14日</h3><div>            <input type="checkbox" disabled checked="checked">将数据结构课程设计——学生管理系统push到github          </div><div>            <input type="checkbox" disabled checked="checked">设置博客的免密push          </div><div>            <input type="checkbox" disabled checked="checked">晚上打cf          </div>]]></content>
    
    
    
    <tags>
      
      <tag>life</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/10/20/hello-world/"/>
    <url>/2020/10/20/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
